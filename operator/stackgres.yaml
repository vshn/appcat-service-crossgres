apiVersion: v1
kind: Namespace
metadata:
  name: stackgres

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgbackupconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGBackupConfig
    listKind: SGBackupConfigList
    plural: sgbackupconfigs
    singular: sgbackupconfig
    shortNames:
      - sgbac
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: type
        type: string
        jsonPath: .spec.storage.type
      - name: compression
        type: string
        jsonPath: .spec.baseBackups.compression
      - name: retention
        type: string
        jsonPath: .spec.baseBackups.retention
      - name: schedule
        type: string
        jsonPath: .spec.baseBackups.cronSchedule
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Backup Configuration. StackGres supports [Continuous Archiving](https://www.postgresql.org/docs/current/continuous-archiving.html)-based backups which are performed automatically, helping achieve near-zero data loss in case of recovery from a backup. An SGBackupConfig contains the necessary configuration to perform these automatic backups and may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all backup configurations in the same namespace.
            spec:
              type: object
              properties:
                baseBackups:
                  type: object
                  description: |
                    Back backups configuration.
                  properties:
                    cronSchedule:
                      type: string
                      description: |
                        Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                        Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                        *  `m`: minute, 0 to 59.
                        *  `h`: hour, 0 to 23.
                        *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                        *  `mon`: month, 1 to 12.
                        *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).

                        Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                        If not set, full backups are performed each day at 05:00 UTC.
                    retention:
                      type: integer
                      minimum: 1
                      description: |
                        When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.

                        Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                        Default is 5.
                    compression:
                      type: string
                      description: |
                        Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum: ["lz4", "lzma", "brotli"]
                    performance:
                      type: object
                      properties:
                        maxNetworkBandwitdh:
                          type: integer
                          description: |
                            **Deprecated**: use instead maxNetworkBandwidth.

                            Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                        maxDiskBandwitdh:
                          type: integer
                          description: |
                            **Deprecated**: use instead maxDiskBandwidth.

                            Maximum disk read I/O when performing a backup. In bytes (per second).
                        maxNetworkBandwidth:
                          type: integer
                          description: |
                            Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                        maxDiskBandwidth:
                          type: integer
                          description: |
                            Maximum disk read I/O when performing a backup. In bytes (per second).
                        uploadDiskConcurrency:
                          type: integer
                          minimum: 1
                          description: |
                            Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
                storage:
                  type: object
                  description: |
                    Backup storage configuration.
                  properties:
                    type:
                      type: string
                      enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                      description: |
                        Determine the type of object storage used for storing the base backups and WAL segments.
                        Possible values:
                        *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                        *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                        *  `gcs`: Google Cloud Storage.
                        *  `azureBlob`: Microsoft Azure Blob Storage.
                    s3:
                      type: object
                      description: |
                        Amazon Web Services S3 configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                          description: |
                            AWS S3 bucket name.
                        path:
                          type: string
                          pattern: '^(/[^/]*)*$'
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    s3Compatible:
                      type: object
                      description: "AWS S3-Compatible API configuration"
                      properties:
                        bucket:
                          type: string
                          pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                          description: |
                            Bucket name.
                        path:
                          type: string
                          pattern: '^(/[^/]*)*$'
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        enablePathStyleAddressing:
                          type: boolean
                          description: |
                            Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).

                            Defaults to false.
                        endpoint:
                          type: string
                          description: |
                            Overrides the default url to connect to an S3-compatible service.
                            For example: `http://s3-like-service:9000`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    gcs:
                      type: object
                      description: |
                        Google Cloud Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                          description: |
                            GCS bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        gcpCredentials:
                          type: object
                          description: |
                            The credentials to access GCS for writing and reading.
                          properties:
                            fetchCredentialsFromMetadataService:
                              type: boolean
                              description: |
                                If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.

                                This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                              properties:
                                serviceAccountJSON:
                                  type: object
                                  description: |
                                    A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["serviceAccountJSON"]
                      required: ["bucket", "gcpCredentials"]
                    azureBlob:
                      type: object
                      description: |
                        Azure Blob Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                          description: |
                            Azure Blob Storage bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the Azure Blob bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        azureCredentials:
                          type: object
                          description: |
                            The credentials to access Azure Blob Storage for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                storageAccount:
                                  type: object
                                  description: |
                                    The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                accessKey:
                                  type: object
                                  description: |
                                    The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["storageAccount", "accessKey"]
                      required: ["bucket", "azureCredentials"]
                  required: ["type"]
              required: ["storage"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    singular: sgbackup
    shortNames:
      - sgbkp
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cluster
        type: string
        jsonPath: .spec.sgCluster
      - name: managed
        type: string
        jsonPath: .status.process.managedLifecycle
      - name: status
        type: string
        jsonPath: .status.process.status
      - name: pg-version
        type: string
        jsonPath: .status.backupInformation.postgresVersion
        priority: 1
      - name: compressed-size
        type: integer
        format: byte
        jsonPath: .status.backupInformation.size.compressed
        priority: 1
      - name: timeline
        type: string
        jsonPath: .status.backupInformation.timeline
        priority: 1
      schema:
        openAPIV3Schema:
          type: object
          required: [metadata, spec]
          description: |
            A manual or automatically generated backup of a SGCluster.
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 51
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres backups in the same namespace."
            spec:
              type: object
              properties:
                sgCluster:
                  type: string
                  description: |
                    The name of the `SGCluster` from which this backup is/will be taken.

                    If this is a copy of an existing completed backup in a different namespace
                     the value must be prefixed with the namespace of the source backup and a
                     dot `.` (e.g. `<cluster namespace>.<cluster name>`) or have the same value
                     if the source backup is also a copy.
                managedLifecycle:
                  type: boolean
                  description: |
                    Indicate if this backup is permanent and should not be removed by the automated
                     retention policy. Default is `false`.
            status:
              type: object
              properties:
                internalName:
                  type: string
                  description: |
                    The name of the backup.
                backupPath:
                  type: string
                  description: |
                    The path were the backup is stored.
                process:
                  type: object
                  properties:
                    status:
                      type: string
                      description: |
                        Status of the backup.
                    failure:
                      type: string
                      description: |
                        If the status is `failed` this field will contain a message indicating the failure reason.
                    jobPod:
                      type: string
                      description: |
                        Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                    managedLifecycle:
                      type: boolean
                      description: |
                        Status (may be transient) until converging to `spec.managedLifecycle`.
                    timing:
                      type: object
                      properties:
                        start:
                          type: string
                          # format: date-time
                          description: |
                            Start time of backup.
                        end:
                          type: string
                          # format: date-time
                          description: |
                            End time of backup.
                        stored:
                          type: string
                          # format: date-time
                          description: |
                            Time at which the backup is safely stored in the object storage.
                backupInformation:
                  type: object
                  properties:
                    hostname:
                      type: string
                      description: |
                        Hostname of the instance where the backup is taken from.
                    sourcePod:
                      type: string
                      description: |
                        Pod where the backup is taken from.
                    systemIdentifier:
                      type: string
                      description: |
                        Postgres *system identifier* of the cluster this backup is taken from.
                    postgresVersion:
                      type: string
                      description: |
                        Postgres version of the server where the backup is taken from.
                    pgData:
                      type: string
                      description: |
                        Data directory where the backup is taken from.
                    size:
                      type: object
                      properties:
                        uncompressed:
                          type: integer
                          format: int64
                          description: |
                            Size (in bytes) of the uncompressed backup.
                        compressed:
                          type: integer
                          format: int64
                          description: |
                            Size (in bytes) of the compressed backup.
                    lsn:
                      type: object
                      properties:
                        start:
                          type: string
                          description: |
                            LSN of when the backup started.
                        end:
                          type: string
                          description: |
                            LSN of when the backup finished.
                    startWalFile:
                      type: string
                      description: |
                        WAL segment file name when the backup was started.
                    timeline:
                      type: string
                      description: |
                        Backup timeline.
                    controlData:
                      type: object
                      description: |
                        An object containing data from the output of pg_controldata on the backup.
                      properties:
                        pg_control version number:
                          type: string
                        Catalog version number:
                          type: string
                        Database system identifier:
                          type: string
                        Database cluster state:
                          type: string
                        pg_control last modified:
                          type: string
                        Latest checkpoint location:
                          type: string
                        Latest checkpoint's REDO location:
                          type: string
                        Latest checkpoint's REDO WAL file:
                          type: string
                        Latest checkpoint's TimeLineID:
                          type: string
                        Latest checkpoint's PrevTimeLineID:
                          type: string
                        Latest checkpoint's full_page_writes:
                          type: string
                        Latest checkpoint's NextXID:
                          type: string
                        Latest checkpoint's NextOID:
                          type: string
                        Latest checkpoint's NextMultiXactId:
                          type: string
                        Latest checkpoint's NextMultiOffset:
                          type: string
                        Latest checkpoint's oldestXID:
                          type: string
                        Latest checkpoint's oldestXID's DB:
                          type: string
                        Latest checkpoint's oldestActiveXID:
                          type: string
                        Latest checkpoint's oldestMultiXid:
                          type: string
                        Latest checkpoint's oldestMulti's DB:
                          type: string
                        "Latest checkpoint's oldestCommitTsXid":
                          type: string
                        "Latest checkpoint's newestCommitTsXid":
                          type: string
                        Time of latest checkpoint:
                          type: string
                        Fake LSN counter for unlogged rels:
                          type: string
                        Minimum recovery ending location:
                          type: string
                        Min recovery ending loc's timeline:
                          type: string
                        Backup start location:
                          type: string
                        Backup end location:
                          type: string
                        End-of-backup record required:
                          type: string
                        wal_level setting:
                          type: string
                        wal_log_hints setting:
                          type: string
                        max_connections setting:
                          type: string
                        max_worker_processes setting:
                          type: string
                        max_wal_senders setting:
                          type: string
                        max_prepared_xacts setting:
                          type: string
                        max_locks_per_xact setting:
                          type: string
                        track_commit_timestamp setting:
                          type: string
                        Maximum data alignment:
                          type: string
                        Database block size:
                          type: string
                        Blocks per segment of large relation:
                          type: string
                        WAL block size:
                          type: string
                        Bytes per WAL segment:
                          type: string
                        Maximum length of identifiers:
                          type: string
                        Maximum columns in an index:
                          type: string
                        Maximum size of a TOAST chunk:
                          type: string
                        Size of a large-object chunk:
                          type: string
                        Date/time type storage:
                          type: string
                        Float4 argument passing:
                          type: string
                        Float8 argument passing:
                          type: string
                        Data page checksum version:
                          type: string
                        Mock authentication nonce:
                          type: string
                sgBackupConfig:
                  type: object
                  description: The name of the backup configuration used to perform this backup.
                  properties:
                    baseBackups:
                      type: object
                      description: |
                        Back backups configuration.
                      properties:
                        cronSchedule:
                          type: string
                          description: |
                            Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                            Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                            *  `m`: minute, 0 to 59
                            *  `h`: hour, 0 to 23
                            *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
                            *  `mon`: month, 1 to 12
                            *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

                            Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                            If not provided, full backups will be performed each day at 05:00 UTC
                        retention:
                          type: integer
                          minimum: 1
                          description: |
                            Based on this parameter, an automatic retention policy is defined to delete old base backups.
                            This parameter specifies the number of base backups to keep, in a sliding window.
                            Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                            Default is 5.
                        compression:
                          type: string
                          description: |
                            Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                          enum: [ lz4, lzma, brotli ]
                        performance:
                          type: object
                          properties:
                            maxNetworkBandwitdh:
                              type: integer
                              description: |
                                **Deprecated**: use instead maxNetworkBandwidth.

                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwitdh:
                              type: integer
                              description: |
                                **Deprecated**: use instead maxDiskBandwidth.

                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            maxNetworkBandwidth:
                              type: integer
                              description: |
                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwidth:
                              type: integer
                              description: |
                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            uploadDiskConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it will use 1 (one stream).
                    compression:
                      type: string
                      description: |
                        Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum: [lz4, lzma, brotli]
                    storage:
                      type: object
                      description: |
                        Backup storage configuration.
                      properties:
                        type:
                          type: string
                          enum: [s3, s3Compatible, gcs, azureBlob]
                          description: |
                            Specifies the type of object storage used for storing the base backups and WAL segments.
                            Possible values:
                            *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                            *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                            *  `gcs`: Google Cloud Storage.
                            *  `azureBlob`: Microsoft Azure Blob Storage.
                        s3:
                          type: object
                          description: |
                            Amazon Web Services S3 configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                AWS S3 bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                                StackGres cluster, using the `SGCluster.metadata.name`.
                            region:
                              type: string
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            storageClass:
                              type: string
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            awsCredentials:
                              type: object
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    secretAccessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [accessKeyId, secretAccessKey]
                              required: [secretKeySelectors]
                          required: [bucket, awsCredentials]
                        s3Compatible:
                          type: object
                          description: AWS S3-Compatible API configuration
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                Bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            enablePathStyleAddressing:
                              type: boolean
                              description: |
                                Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                            endpoint:
                              type: string
                              description: |
                                Overrides the default url to connect to an S3-compatible service.
                                For example: `http://s3-like-service:9000`.
                            region:
                              type: string
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            storageClass:
                              type: string
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            awsCredentials:
                              type: object
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    secretAccessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [accessKeyId, secretAccessKey]
                              required: [secretKeySelectors]
                          required: [bucket, awsCredentials]
                        gcs:
                          type: object
                          description: |
                            Google Cloud Storage configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                GCS bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            gcpCredentials:
                              type: object
                              description: |
                                Credentials to access GCS for writing and reading.
                              properties:
                                fetchCredentialsFromMetadataService:
                                  type: boolean
                                  description: |
                                    If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                    This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                  properties:
                                    serviceAccountJSON:
                                      type: object
                                      description: |
                                        A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [serviceAccountJSON]
                          required: [bucket, gcpCredentials]
                        azureBlob:
                          type: object
                          description: |
                            Azure Blob Storage configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                Azure Blob Storage bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            azureCredentials:
                              type: object
                              description: |
                                Credentials to access Azure Blob Storage for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                  properties:
                                    storageAccount:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the name of the storage account.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    accessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [storageAccount, accessKey]
                          required: [bucket, azureCredentials]
                      required: [type]
                  required: [storage]
    - name: v1beta1
      served: true
      storage: false
      additionalPrinterColumns:
      - jsonPath: .spec.sgCluster
        name: cluster
        type: string
      - jsonPath: .status.process.managedLifecycle
        name: managed
        type: string
      - jsonPath: .status.process.status
        name: status
        type: string
      - jsonPath: .status.backupInformation.postgresVersion
        name: pg-version
        priority: 1
        type: string
      - format: byte
        jsonPath: .status.backupInformation.size.compressed
        name: compressed-size
        priority: 1
        type: integer
      - jsonPath: .status.backupInformation.timeline
        name: timeline
        priority: 1
        type: string
      schema:
        openAPIV3Schema:
          description: |
            A manual or automatically generated backup of a SGCluster.
          properties:
            metadata:
              properties:
                name:
                  description: |
                    Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres backups in the same namespace."
                  type: string
              type: object
            spec:
              properties:
                managedLifecycle:
                  description: |
                    Indicate if this backup is permanent and should not be removed by the automated retention policy.
                  type: boolean
                sgCluster:
                  description: |
                    The name of the `SGCluster` from which this backup is/will be taken.
                  type: string
              type: object
            status:
              properties:
                backupInformation:
                  properties:
                    controlData:
                      description: |
                        An object containing data from the output of pg_controldata on the backup.
                      type: object
                    hostname:
                      description: |
                        Hostname of the instance where the backup is taken from.
                      type: string
                    lsn:
                      properties:
                        end:
                          description: |
                            LSN of when the backup finished.
                          type: string
                        start:
                          description: |
                            LSN of when the backup started.
                          type: string
                      type: object
                    pgData:
                      description: |
                        Data directory where the backup is taken from.
                      type: string
                    postgresVersion:
                      description: |
                        Postgres version of the server where the backup is taken from.
                      type: string
                    size:
                      properties:
                        compressed:
                          description: |
                            Size (in bytes) of the compressed backup.
                          format: int64
                          type: integer
                        uncompressed:
                          description: |
                            Size (in bytes) of the uncompressed backup.
                          format: int64
                          type: integer
                      type: object
                    sourcePod:
                      description: |
                        Pod where the backup is taken from.
                      type: string
                    startWalFile:
                      description: |
                        WAL segment file name when the backup was started.
                      type: string
                    systemIdentifier:
                      description: |
                        Postgres *system identifier* of the cluster this backup is taken from.
                      type: string
                    timeline:
                      description: |
                        Backup timeline.
                      type: string
                  type: object
                internalName:
                  description: |
                    The name of the backup.
                  type: string
                process:
                  properties:
                    failure:
                      description: |
                        If the status is `failed` this field will contain a message indicating the failure reason.
                      type: string
                    jobPod:
                      description: |
                        Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                      type: string
                    managedLifecycle:
                      description: |
                        Status (may be transient) until converging to `spec.managedLifecycle`.
                      type: boolean
                    status:
                      description: |
                        Status of the backup.
                      enum:
                        - Running
                        - Completed
                        - Failed
                      type: string
                    timing:
                      properties:
                        end:
                          description: |
                            End time of backup.
                          type: string
                        start:
                          description: |
                            Start time of backup.
                          type: string
                        stored:
                          description: |
                            Time at which the backup is safely stored in the object storage.
                          type: string
                      type: object
                  type: object
                sgBackupConfig:
                  description: The name of the backup configuration used to perform
                    this backup.
                  properties:
                    baseBackups:
                      type: object
                      description: |
                        Back backups configuration.
                      properties:
                        cronSchedule:
                          type: string
                          description: |
                            Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                            Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                            *  `m`: minute, 0 to 59
                            *  `h`: hour, 0 to 23
                            *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
                            *  `mon`: month, 1 to 12
                            *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

                            Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                            If not provided, full backups will be performed each day at 05:00 UTC
                        retention:
                          type: integer
                          minimum: 1
                          description: |
                            Based on this parameter, an automatic retention policy is defined to delete old base backups.
                            This parameter specifies the number of base backups to keep, in a sliding window.
                            Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                            Default is 5.
                        compression:
                          type: string
                          description: |
                            Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                          enum: [ lz4, lzma, brotli ]
                        performance:
                          type: object
                          properties:
                            maxNetworkBandwitdh:
                              type: integer
                              description: |
                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwitdh:
                              type: integer
                              description: |
                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            uploadDiskConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it will use 1 (one stream).
                    compression:
                      description: |
                        Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum:
                        - lz4
                        - lzma
                        - brotli
                      type: string
                    storage:
                      description: |
                        Backup storage configuration.
                      properties:
                        azureBlob:
                          description: |
                            Azure Blob Storage configuration.
                          properties:
                            azureCredentials:
                              description: |
                                The credentials to access Azure Blob Storage for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                  properties:
                                    accessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    storageAccount:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the name of the storage account.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - storageAccount
                                    - accessKey
                                  type: object
                              type: object
                            bucket:
                              description: |
                                Azure Blob Storage bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            path:
                              description: |
                                Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                          required:
                            - bucket
                            - azureCredentials
                          type: object
                        gcs:
                          description: |
                            Google Cloud Storage configuration.
                          properties:
                            bucket:
                              description: |
                                GCS bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            gcpCredentials:
                              description: |
                                Credentials to access GCS for writing and reading.
                              properties:
                                fetchCredentialsFromMetadataService:
                                  description: |
                                    If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                    This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                  type: boolean
                                secretKeySelectors:
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                  properties:
                                    serviceAccountJSON:
                                      description: |
                                        A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountJSON
                                  type: object
                              type: object
                            path:
                              description: |
                                Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                          required:
                            - bucket
                            - gcpCredentials
                          type: object
                        s3:
                          description: |
                            Amazon Web Services S3 configuration.
                          properties:
                            awsCredentials:
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                AWS S3 bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            path:
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                                StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                            region:
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                              type: string
                            storageClass:
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        s3Compatible:
                          description: AWS S3-Compatible API configuration
                          properties:
                            awsCredentials:
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                Bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            enablePathStyleAddressing:
                              description: |
                                Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                              type: boolean
                            endpoint:
                              description: |
                                Overrides the default url to connect to an S3-compatible service.
                                For example: `http://s3-like-service:9000`.
                              type: string
                            path:
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                            region:
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                              type: string
                            storageClass:
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        type:
                          description: |
                            Specifies the type of object storage used for storing the base backups and WAL segments.
                            Possible values:
                            *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                            *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                            *  `gcs`: Google Cloud Storage.
                            *  `azureBlob`: Microsoft Azure Blob Storage.
                          enum:
                            - s3
                            - s3Compatible
                            - gcs
                            - azureBlob
                          type: string
                      required:
                        - type
                      type: object
                  required:
                    - storage
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgclusters.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGCluster
    listKind: SGClusterList
    plural: sgclusters
    singular: sgcluster
    shortNames:
      - sgclu
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: version
        type: string
        jsonPath: .spec.postgres.version
      - name: instances
        type: integer
        jsonPath: .spec.instances 
      - name: Profile
        type: string
        jsonPath: .spec.sgInstanceProfile
      - name: Disk
        type: string
        jsonPath: .spec.pods.persistentVolume.size
      - name: prometheus-Autobind
        type: string
        jsonPath: .spec.prometheusAutobind
        priority: 1
      - name: pool-config
        type: string
        jsonPath: .spec.configurations.sgPoolingConfig
        priority: 1
      - name: postgres-config
        type: string
        jsonPath: .spec.configurations.sgPostgresConfig
        priority: 1
      subresources:
        status: { }
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 52
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the StackGres cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
            spec:
              type: object
              properties:
                postgres:
                  type: object
                  description: |
                    This section allow to configure Postgres features
                  properties:
                    version:
                      type: string
                      description: |
                        Postgres version used on the cluster. It is either of:
                        *  The string 'latest', which automatically sets the latest major.minor Postgres version.
                        *  A major version, like '12' or '11', which sets that major version and the latest minor version.
                        *  A specific major.minor version, like '12.2'.
                    flavor:
                      type: string
                      description: |
                        Postgres flavor used on the cluster. It is either of:
                        *  `babelfish` will use the [Babelfish for Postgres](https://babelfish-for-postgresql.github.io/babelfish-for-postgresql/).
                        
                        If not specified then the vanilla Postgres will be used for the cluster.
                    extensions:
                      type: array
                      description: |
                        StackGres support deploy of extensions at runtime by simply adding an entry to this array. A deployed extension still
                        requires the creation in a database using the [`CREATE EXTENSION`](https://www.postgresql.org/docs/current/sql-createextension.html)
                        statement. After an extension is deployed correctly it will be present until removed and the cluster restarted.
                        
                        A cluster restart is required for:
                        * Extensions that requires to add an entry to [`shared_preload_libraries`](https://postgresqlco.nf/en/doc/param/shared_preload_libraries/) configuration parameter.
                        * Upgrading extensions that overwrite any file that is not the extension''s control file or extension''s script file.
                        * Removing extensions. Until the cluster is not restarted a removed extension will still be available.
                        * Install of extensions that require extra mount. After installed the cluster will require to be restarted.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the extension to deploy.
                          publisher:
                            type: string
                            description: The id of the publisher of the extension to deploy. If not specified `com.ongres` will be used by default.
                          version:
                            type: string
                            description: The version of the extension to deploy. If not specified version of `stable` channel will be used by default.
                          repository:
                            type: string
                            description: The repository base URL from where to obtain the extension to deploy. If not specified https://stackgres.io/downloads/postgres/extensions will be used by default (or the value specified during operator deployment).
                        required: ["name"]
                    ssl:
                      type: object
                      description: |
                        This section allow to use SSL when connecting to Postgres
                      properties:
                        enabled:
                          type: boolean
                          description: |
                            Allow to enable SSL for connections to Postgres. By default is `false`.
                            
                            If `true` fields `certificateSecretKeySelector` and `privateKeySecretKeySelector` will be required.
                        certificateSecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the certificate or certificate chain used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the certificate or certificate chain for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the certificate or certificate chain for SSL connections
                          required: [ "name", "key" ]
                        privateKeySecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the private key used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the private key for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the private key for SSL connections
                          required: [ "name", "key" ]
                  required: [ "version" ]
                instances:
                  type: integer
                  minimum: 1
                  maximum: 16
                  description: |
                    Number of StackGres instances for the cluster. Each instance contains one Postgres server.
                     Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
                replication:
                  type: object
                  description: |
                    This section allow to configure Postgres replication mode and HA roles groups.

                    The main replication group is implicit and contains the total number of instances less the sum of all
                     instances in other replication groups.

                    The total number of instances is always specified by `.spec.instances`.
                  properties:
                    mode:
                      type: string
                      description: |
                        The replication mode applied to the whole cluster.
                        Possible values are:
                        * `async` (default)
                        * `sync`
                        * `strict-sync`
                        
                        ### `async` Mode
                        
                        When in asynchronous mode the cluster is allowed to lose some committed transactions.
                         When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
                         will automatically be promoted to primary. Any transactions that have not been replicated to that standby
                         remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
                         but recovering it requires a manual recovery effort by data recovery specialists).
                        
                        ### `sync` Mode
                        
                        When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
                         transactions that may have returned a successful commit status to client (clients can change the behavior
                         per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
                         values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
                         means that the system may be unavailable for writes even though some servers are available. System
                         administrators can still use manual failover commands to promote a standby even if it results in transaction
                         loss.
                        
                        Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
                         standby is available, primary server will still accept writes, but does not guarantee their replication. When
                         the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
                         back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
                         makes synchronous mode usable with 2 node clusters.
                        
                        When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
                         mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
                         signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.
                        
                        ### `strict-sync` Mode
                        
                        When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
                         synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
                         standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
                         transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
                         synchronous replica comes up.

                        **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
                         transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
                         replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
                         visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.
                    role:
                      type: string
                      description: |
                        This role is applied to the instances of the implicit replication group that is composed by `.spec.instances` number of instances.
                        Possible values are:
                        * `ha-read` (default)
                        * `ha`
                        The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
                        Only if the role is set to `ha-read` instances of main replication group will be exposed via the replicas service.
                    syncInstances:
                      type: integer
                      minimum: 1
                      description: |
                        Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
                         Only setteable if mode is `sync` or `strict-sync`.
                    groups:
                      type: array
                      description: |
                        StackGres support replication groups where a replication group of a specified number of instances could have different
                         replication role. The main replication group is implicit and contains the total number of instances less the sum of all
                         instances in other replication groups.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the replication group. If not set will default to the `group-<index>`.
                          role:
                            type: string
                            description: |
                              This role is applied to the instances of this replication group.
                              Possible values are:
                              * `ha-read`
                              * `ha`
                              * `readonly`
                              * `none`
                              The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
                              Only if the role is set to `readonly` or `ha-read` instances of such replication group will be exposed via the replicas service.
                          instances:
                            type: integer
                            minimum: 1
                            maximum: 16
                            description: |
                              Number of StackGres instances for this replication group.
                              
                              The total number of instance of a cluster is always `.spec.instances`. The sum of the instances in the replication group must be
                               less than the total number of instances.
                        required: ["role", "instances"]
                sgInstanceProfile:
                  type: string
                  description: |
                    Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                metadata:
                  type: object
                  description: Metadata information from cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created or managed by StackGres.
                          additionalProperties:
                            type: string
                        clusterPods:
                          type: object
                          description: Annotations to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to all services created or managed by StackGres.
                          additionalProperties:
                            type: string
                        primaryService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                          additionalProperties:
                            type: string
                        replicasService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                          additionalProperties:
                            type: string
                    labels:
                      type: object
                      description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                      properties:
                        clusterPods:
                          type: object
                          description: Labels to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string 
                postgresServices:
                  type: object
                  description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                  properties:
                    primary:
                      type: object
                      description: Configuration for the `-primary` service. It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.
                      properties:
                        enabled:
                          type: boolean
                          description: Specify if the `-primary` service should be created or not.
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service.
                        externalIPs:
                          type: array
                          description: Specify custom external IPs for Postgres primary service
                          items:
                            type: string
                    replicas:
                      type: object
                      description: Configuration for the `-replicas` service. It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.
                      properties:
                        enabled:
                          type: boolean
                          description: Specify if the `-replicas` service should be created or not.
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service.
                        externalIPs:
                          type: array
                          description: Specify the custom external IPs for Postgres replicas service
                          items:
                            type: string
                pods:
                  type: object
                  description: Cluster pod's configuration.
                  properties:
                    persistentVolume:
                      type: object
                      description: Pod's persistent volume configuration.
                      properties:
                        size:
                          type: string
                          pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                          description: |
                            Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                        storageClass:
                          type: string
                          description: |
                            Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                      required: ["size"]
                    disableConnectionPooling:
                      type: boolean
                      description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                    disableMetricsExporter:
                      type: boolean
                      description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                    disablePostgresUtil:
                      type: boolean
                      description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                    scheduling:
                      type: object
                      description: Pod custom scheduling configuration.
                      properties:
                        nodeSelector:
                          type: object
                          additionalProperties:
                            type: string
                          description: Pod custom node selector.
                        nodeAffinity:
                          type: object
                          description: Node affinity is a group of node affinity scheduling rules.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              type: array
                              description: |
                                The scheduler will prefer to schedule pods to nodes that satisfy
                                the affinity expressions specified by this field, but it may choose a node
                                that violates one or more of the expressions. The node that is most preferred
                                is the one with the greatest sum of weights, i.e. for each node that meets
                                all of the scheduling requirements (resource request, requiredDuringScheduling
                                affinity expressions, etc.), compute a sum by iterating through the elements
                                of this field and adding "weight" to the sum if the node matches the corresponding
                                matchExpressions; the node(s) with the highest sum are the most preferred.
                              items:
                                type: object
                                description: | 
                                  An empty preferred scheduling term matches all objects with
                                  implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term
                                  matches no objects (i.e. is also a no-op).
                                properties:
                                  weight:
                                    type: integer
                                    description: Weight associated with matching the corresponding nodeSelectorTerm,
                                      in the range 1-100.
                                  preference:
                                    type: object
                                    description: |
                                      A null or empty node selector term matches no objects.
                                      The requirements of them are ANDed. The TopologySelectorTerm type
                                      implements a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        type: array
                                        description: A list of node selector requirements by node's labels.
                                        items:
                                          type: object
                                          description: A node selector requirement is a selector that contains
                                            values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              type: string
                                              description: The label key that the selector applies to.
                                            operator: 
                                              type: string
                                              description: |
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt,
                                                and Lt.
                                            values:
                                              type: array
                                              description: An array of string values. If the operator is
                                                In or NotIn, the values array must be non-empty. If the
                                                operator is Exists or DoesNotExist, the values array must
                                                be empty. If the operator is Gt or Lt, the values array
                                                must have a single element, which will be interpreted as
                                                an integer. This array is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                      matchFields:
                                        type: array
                                        description: A list of node selector requirements by node's labels.
                                        items:
                                          type: object
                                          description: A node selector requirement is a selector that contains
                                            values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              type: string
                                              description: The label key that the selector applies to.
                                            operator: 
                                              type: string
                                              description: |
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt,
                                                and Lt.
                                            values:
                                              type: array
                                              description: An array of string values. If the operator is
                                                In or NotIn, the values array must be non-empty. If the
                                                operator is Exists or DoesNotExist, the values array must
                                                be empty. If the operator is Gt or Lt, the values array
                                                must have a single element, which will be interpreted as
                                                an integer. This array is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                            requiredDuringSchedulingIgnoredDuringExecution:
                              type: object
                              description: |
                                If the affinity requirements specified by this field are not met at
                                scheduling time, the pod will not be scheduled onto the node.
                                This type of affinity can restrict to only run the pod on specifically
                                nodes like "Intel CPUs".
                              properties:
                                nodeSelectorTerms:
                                  type: array
                                  description: Pod custom node tolerations
                                  items:
                                    type: object
                                    description: Pod custom node toleration
                                    properties:
                                      matchExpressions:
                                        type: array
                                        description: A list of node selector requirements by node's labels.
                                        items:
                                          type: object
                                          description: A node selector requirement is a selector that contains
                                            values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              type: string
                                              description: The label key that the selector applies to.
                                            operator: 
                                              type: string
                                              description: |
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt,
                                                and Lt.
                                            values:
                                              type: array
                                              description: An array of string values. If the operator is
                                                In or NotIn, the values array must be non-empty. If the
                                                operator is Exists or DoesNotExist, the values array must
                                                be empty. If the operator is Gt or Lt, the values array
                                                must have a single element, which will be interpreted as
                                                an integer. This array is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                                      matchFields:
                                        type: array
                                        description: A list of node selector requirements by node's labels.
                                        items:
                                          type: object
                                          description: A node selector requirement is a selector that contains
                                            values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              type: string
                                              description: The label key that the selector applies to.
                                            operator: 
                                              type: string
                                              description: |
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt,
                                                and Lt.
                                            values:
                                              type: array
                                              description: An array of string values. If the operator is
                                                In or NotIn, the values array must be non-empty. If the
                                                operator is Exists or DoesNotExist, the values array must
                                                be empty. If the operator is Gt or Lt, the values array
                                                must have a single element, which will be interpreted as
                                                an integer. This array is replaced during a strategic merge
                                                patch.
                                              items:
                                                type: string
                        tolerations:
                          type: array
                          description: Pod custom node tolerations
                          items:
                            type: object
                            description: Pod custom node toleration
                            properties:
                              key:
                                type: string
                                description: |
                                  Key is the taint key that the toleration applies to. Empty means match all taint
                                   keys. If the key is empty, operator must be Exists; this combination means to
                                   match all values and all keys.
                              operator:
                                type: string
                                description: |
                                  Operator represents a key's relationship to the value. Valid operators are Exists
                                   and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                                   a pod can tolerate all taints of a particular category.
                              value:
                                type: string
                                description: |
                                  Value is the taint value the toleration matches to. If the operator is Exists, the
                                   value should be empty, otherwise just a regular string.
                              effect:
                                type: string
                                description: |
                                  Effect indicates the taint effect to match. Empty means match all taint effects.
                                   When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              tolerationSeconds:
                                type: integer
                                description: |
                                  TolerationSeconds represents the period of time the toleration (which must be of
                                   effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                   it is not set, which means tolerate the taint forever (do not evict). Zero and
                                   negative values will be treated as 0 (evict immediately) by the system.
                  required: ["persistentVolume"]
                configurations:
                  type: object
                  description: |
                    Cluster custom configurations.
                  properties:
                    sgPostgresConfig:
                      type: string
                      description: |
                        Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                    sgPoolingConfig:
                      type: string
                      description: |
                        Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

                        If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                    sgBackupConfig:
                      type: string
                      description: |
                              Name of the [SGBackupConfig](https://stackgres.io/doc/latest/reference/crd/sgbackupconfig) to use for the cluster. It defines the backups policy, storage and retention, among others, applied to the cluster. When not set, backup configuration will not be used.
                    backupPath:
                      type: string
                      description: |
                        The path were the backup is stored. If not set this field is filled up by the operator.

                        When provided will indicate were the backups and WAL files will be stored.
                initialData:
                  type: object
                  description: Cluster initialization data options. Cluster may be initialized empty, or from a backup restoration. Specifying scripts to run on the database after cluster creation is also possible.
                  properties:
                    restore:
                      type: object
                      properties:
                        fromBackup:
                          type: object
                          description: |
                            From which backup to restore and how the process is configured
                          properties:
                            uid:
                              type: string
                              description: |
                                When set to the UID of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the backup data to it. If not set, the cluster is initialized empty. This field is deprecated.
                            name:
                              type: string
                              description: |
                                When set to the name of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the backup data to it. If not set, the cluster is initialized empty. The selected backup must be in the same namespace.
                            pointInTimeRecovery:
                              type: object
                              description: |
                                It is possible to restore the database to its state at any time since your backup was taken using Point-in-Time Recovery (PITR) as long as another backup newer than the PITR requested restoration date does not exists.

                                Point In Time Recovery (PITR). PITR allow to restore the database state to an arbitrary point of time in the past, as long as you specify a backup older than the PITR requested restoration date and does not exists a backup newer than the same restoration date.

                                See also: https://www.postgresql.org/docs/current/continuous-archiving.html
                              properties:
                                restoreToTimestamp:
                                  type: string
                                  description: |
                                    An ISO 8601 date, that holds UTC date indicating at which point-in-time the database have to be restored.
                        downloadDiskConcurrency:
                          type: integer
                          minimum: 1
                          description: |
                            The backup fetch process may fetch several streams in parallel. Parallel fetching is enabled when set to a value larger than one.

                            If not specified it will be interpreted as latest.
                    scripts:
                      type: array
                      description: |
                        A list of SQL scripts executed in sequence, exactly once, when the database is bootstrap and/or after restore is completed.
                      items:
                        type: object
                        description: |
                          Scripts are executed in auto-commit mode with the user `postgres` in the specified database (or in database `postgres` if not specified).

                          Fields `script` and `scriptFrom` are mutually exclusive and only one of them is required.
                        properties:
                          name:
                            type: string
                            description: |
                              Name of the script. Must be unique across this SGCluster.
                          database:
                            type: string
                            description: |
                              Database where the script is executed. Defaults to the `postgres` database, if not specified.
                          script:
                            type: string
                            description: |
                              Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
                          scriptFrom:
                            type: object
                            description: |
                              Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.

                              Fields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.
                            properties:
                              secretKeyRef:
                                type: object
                                description: |
                                  A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
                                properties:
                                  name:
                                    type: string
                                    description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  key:
                                    type: string
                                    description: The key of the secret to select from. Must be a valid secret key.
                              configMapKeyRef:
                                type: object
                                description: |
                                  A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
                                properties:
                                  name:
                                    type: string
                                    description: |
                                      The name of the ConfigMap that contains the SQL script to execute.
                                  key:
                                    type: string
                                    description: |
                                      The key name within the ConfigMap that contains the SQL script to execute.
                prometheusAutobind:
                  type: boolean
                  description: |
                    If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: |
                        It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                        The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
                    enabledFeatureGates:
                      type: array
                      description: |
                        A list of StackGres feature gates to enable (not suitable for a production environment).
                        
                        Available feature gates are:
                        * `babelfish-flavor`: Allow to use `babelfish` flavor.
                      items:
                        type: string
                        description: The name of the fature gate to enable.
                distributedLogs:
                  type: object
                  description: StackGres features a functionality for all pods to send Postgres, Patroni and PgBouncer logs to a central (distributed) location, which is in turn another Postgres database. Logs can then be accessed via SQL interface or from the web UI. This section controls whether to enable this feature or not. If not enabled, logs are send to the pod's standard output.
                  properties:
                    sgDistributedLogs:
                      type: string
                      description: |
                        Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/04-postgres-cluster-management/06-distributed-logs/) to use for this cluster. It must exist.
                    retention:
                      type: string
                      pattern: '^[0-9]+ (minutes?|hours?|days?|months?)'
                      description: |
                        Define a retention window with the syntax `<integer> (minutes|hours|days|months)` in which log entries are kept.
                         Log entries will be removed when they get older more than the double of the specified retention window.

                        When this field is changed the retention will be applied only to log entries that are newer than the end of
                         the retention window previously specified. If no retention window was previously specified it is considered
                         to be of 7 days. This means that if previous retention window is of `7 days` new retention configuration will
                         apply after UTC timestamp calculated with: `SELECT date_trunc('days', now() at time zone 'UTC') - INTERVAL '7 days'`.
                toInstallPostgresExtensions:
                  type: array
                  description: The list of Postgres extensions to install. This section is fille by the operator.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required: ["name", "publisher", "version", "repository", "postgresVersion"]
              required: ["instances", "postgres", "pods"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                podStatuses:
                  type: array
                  description: The list of pod statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the pod.
                      replicationGroup:
                        type: integer
                        description: Indicate the replication group this Pod belongs to.
                      pendingRestart:
                        type: boolean
                        description: Indicate if the pod requires restart
                      installedPostgresExtensions:
                        type: array
                        description: The list of Postgres extensions currently installed.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the installed extension.
                            publisher:
                              type: string
                              description: The id of the publisher of the installed extension.
                            version:
                              type: string
                              description: The version of the installed extension.
                            repository:
                              type: string
                              description: The repository base URL from where the extension was installed from.
                            postgresVersion:
                              type: string
                              description: The postgres major version of the installed extension.
                            build:
                              type: string
                              description: The build version of the installed extension.
                            extraMounts:
                              type: array
                              description: The extra mounts of the installed extension.
                              items:
                                type: string
                                description: The extra mount of the installed extension.
                          required: ["name", "publisher", "version", "repository", "postgresVersion"]
                    required: ["name"]
                dbOps:
                  type: object
                  description: |
                    Used by some [SGDbOps](https://stackgres.io/doc/latest/reference/crd/sgdbops) to indicate the operation configuration and status to the operator.
                  properties:
                    majorVersionUpgrade:
                      type: object
                      description: |
                        The major version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                        sourcePostgresVersion:
                          type: string
                          description: |
                            The source PostgreSQL version
                        targetPostgresVersion:
                          type: string
                          description: |
                            The target PostgreSQL version
                        locale:
                          type: string
                          description: |
                            The PostgreSQL locale
                        encoding:
                          type: string
                          description: |
                            The PostgreSQL encoding
                        dataChecksum:
                          type: boolean
                          description: |
                            Indicate if PostgreSQL data checksum is enabled
                        link:
                          type: boolean
                          description: |
                            Use `--link` option when running `pg_upgrade`
                        clone:
                          type: boolean
                          description: |
                            Use `--clone` option when running `pg_upgrade`
                        check:
                          type: boolean
                          description: |
                            Run `pg_upgrade` with check option before performing the real upgrade
                    restart:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                    minorVersionUpgrade:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                        sourcePostgresVersion:
                          type: string
                          description: |
                            Postgres version that is currently running on the cluster
                        targetPostgresVersion:
                          type: string
                          description: |
                            The desired Postgres version for the cluster
                    securityUpgrade:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                arch:
                  type: string
                  description: The architecture on which the cluster has been initialized.
                os:
                  type: string
                  description: The operative system on which the cluster has been initialized.
                labelPrefix:
                  type: string
                  description: The custom prefix that is prepended to all labels.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgdbops.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGDbOps
    listKind: SGDbOpsList
    plural: sgdbops
    singular: sgdbops
    shortNames:
      - sgdo
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cluster
        type: string
        jsonPath: .spec.sgCluster
      - name: operation
        type: string
        jsonPath: .spec.op
      - name: status
        type: string
        jsonPath: .status.conditions[?(@.status=="True")].reason
      - name: started-at
        type: string
        jsonPath: .status.opStarted
        priority: 1
      - name: retries
        type: string
        jsonPath: .status.opRetries
        priority: 1
      schema:
        openAPIV3Schema:
          required: ["metadata", "spec"]
          type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 21
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the Database Operation. A database operation represents a ""kind"" of operation on a StackGres cluster, classified by a given name. The operation reference one SGCluster by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 `label`, an alphanumeric (a-z, and 0-9) string, with a maximum length of 21 characters, with the '-' character allowed anywhere except the first or last character.

                    The name must be unique across all database operations in the same namespace."
            spec:
              type: object
              properties:
                sgCluster:
                  type: string
                  description: |
                    The name of SGCluster on which the operation will be performed.
                op:
                  type: string
                  description: |
                    The kind of operation that will be performed on the SGCluster. Available operations are:

                    * `benchmark`: run a benchmark on the specified SGCluster and report the results in the status.
                    * `vacuum`: perform a [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation on the specified SGCluster.
                    * `repack`: run [`pg_repack`](https://github.com/reorg/pg_repack) command on the specified SGCluster.
                    * `majorVersionUpgrade`: perform a major version upgrade of PostgreSQL using [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command.
                    * `restart`: perform a restart of the cluster.
                    * `minorVersionUpgrade`: perform a minor version upgrade of PostgreSQL.
                    * `securityUpgrade`: perform a security upgrade of the cluster.
                    * `upgrade`: perform a operator API upgrade of the cluster
                runAt:
                  type: string
                  description: |
                    An ISO 8601 date, that holds UTC scheduled date of the operation execution.

                    If not specified or if the date it's in the past, it will be interpreted ASAP.
                timeout:
                  type: string
                  description: |
                    An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies a timeout after which the operation execution will be canceled.

                    If the operation can not be performed due to timeout expiration, the condition `Failed` will have a status of `True` and the reason will be `OperationTimedOut`.

                    If not specified the operation will never fail for timeout expiration.
                maxRetries:
                  type: integer
                  description: |
                    The maximum number of retries the operation is allowed to do after a failure.

                    A value of `0` (zero) means no retries are made. Can not be greater than `10`. Defaults to: `0`.
                benchmark:
                  type: object
                  description: |
                    Configuration of the benchmark
                  properties:
                    type:
                      type: string
                      description: |
                        The type of benchmark that will be performed on the SGCluster. Available benchmarks are:

                        * `pgbench`: run [pgbench](https://www.postgresql.org/docs/current/pgbench.html) on the specified SGCluster and report the results in the status.
                    pgbench:
                      type: object
                      description: |
                        Configuration of [pgbench](https://www.postgresql.org/docs/current/pgbench.html) benchmark
                      properties:
                        databaseSize:
                          type: string
                          pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                          description: |
                            Size of the database to generate. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                        duration:
                          type: string
                          description: |
                            An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long the benchmark will run.
                        usePreparedStatements:
                          type: boolean
                          description: |
                            Use extended query protocol with prepared statements. Defaults to: `false`.
                        concurrentClients:
                          type: integer
                          description: |
                            Number of clients simulated, that is, number of concurrent database sessions. Defaults to: `1`.
                        threads:
                          type: integer
                          description: |
                            Number of worker threads within pgbench. Using more than one thread can be helpful on multi-CPU machines. Clients are distributed as evenly as possible among available threads. Default is `1`.
                      required: [ "databaseSize", "duration" ]
                    connectionType:
                      type: string
                      description: |
                        Specify the service where the benchmark will connect to:

                        * `primary-service`: Connect to the primary service
                        * `replicas-service`: Connect to the replicas service
                  required: [ "type" ]
                vacuum:
                  type: object
                  description: |
                    Configuration of [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation
                  properties:
                    full:
                      type: boolean
                      description: |
                        If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
                        This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
                         until the operation is complete. Usually this should only be used when a significant amount of space needs to be
                         reclaimed from within the table. Defaults to: `false`.
                    freeze:
                      type: boolean
                      description: |
                        If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
                         vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
                         when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
                    analyze:
                      type: boolean
                      description: |
                        If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
                    disablePageSkipping:
                      type: boolean
                      description: |
                        Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
                         skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
                         aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
                         waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
                         used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
                         software issue causing database corruption. Defaults to: `false`.
                    databases:
                      type: array
                      description: |
                        List of databases to vacuum or repack, don't specify to select all databases
                      items:
                        type: object
                        required: [ "name" ]
                        properties:
                          name:
                            type: string
                            description: the name of the database
                          full:
                            type: boolean
                            description: |
                              If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
                              This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
                               until the operation is complete. Usually this should only be used when a significant amount of space needs to be
                               reclaimed from within the table. Defaults to: `false`.
                          freeze:
                            type: boolean
                            description: |
                              If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
                               vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
                               when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
                          analyze:
                            type: boolean
                            description: |
                              If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
                          disablePageSkipping:
                            type: boolean
                            description: |
                              Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
                               skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
                               aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
                               waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
                               used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
                               software issue causing database corruption. Defaults to: `false`.
                repack:
                  type: object
                  description: |
                    Configuration of [`pg_repack`](https://github.com/reorg/pg_repack) command
                  properties:
                    noOrder:
                      type: boolean
                      description: |
                        If true do vacuum full instead of cluster. Defaults to: `false`.
                    waitTimeout:
                      type: string
                      description: |
                        If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
                    noKillBackend:
                      type: boolean
                      description: |
                        If true don't kill other backends when timed out. Defaults to: `false`.
                    noAnalyze:
                      type: boolean
                      description: |
                        If true don't analyze at end. Defaults to: `false`.
                    excludeExtension:
                      type: boolean
                      description: |
                        If true don't repack tables which belong to specific extension. Defaults to: `false`.
                    databases:
                      type: array
                      description: |
                        List of database to vacuum or repack, don't specify to select all databases
                      items:
                        type: object
                        required: [ "name" ]
                        properties:
                          name:
                            type: string
                            description: the name of the database
                          noOrder:
                            type: boolean
                            description: |
                              If true do vacuum full instead of cluster. Defaults to: `false`.
                          waitTimeout:
                            type: string
                            description: |
                              If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
                          noKillBackend:
                            type: boolean
                            description: |
                              If true don't kill other backends when timed out. Defaults to: `false`.
                          noAnalyze:
                            type: boolean
                            description: |
                              If true don't analyze at end. Defaults to: `false`.
                          excludeExtension:
                            type: boolean
                            description: |
                              If true don't repack tables which belong to specific extension. Defaults to: `false`.
                majorVersionUpgrade:
                  type: object
                  description: |
                    Configuration of major version upgrade (see also [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command)
                  properties:
                    postgresVersion:
                      type: string
                      description: |
                        The target postgres version that must have the same major version of the target SGCluster.
                    sgPostgresConfig:
                      type: string
                      description: |
                        The postgres config that must have the same major version of the target postgres version.
                    backupPath:
                      type: string
                      description: |
                        The path were the backup is stored. If not set this field is filled up by the operator.

                        When provided will indicate were the backups and WAL files will be stored.

                        The path should be different from the current `.spec.configurations.backupPath` value for the target `SGCluster`
                         in order to avoid mixing WAL files of two distinct major versions of postgres.
                    link:
                      type: boolean
                      description: |
                        If true use hard links instead of copying files to the new cluster. This option is mutually exclusive with `clone`. Defaults to: `false`.
                    clone:
                      type: boolean
                      description: |
                        If true use efficient file cloning (also known as "reflinks" on some systems) instead of copying files to the new cluster.
                        This can result in near-instantaneous copying of the data files, giving the speed advantages of `link` while leaving the old
                         cluster untouched. This option is mutually exclusive with `link`. Defaults to: `false`.

                        File cloning is only supported on some operating systems and file systems. If it is selected but not supported, the pg_upgrade
                         run will error. At present, it is supported on Linux (kernel 4.5 or later) with Btrfs and XFS (on file systems created with
                         reflink support), and on macOS with APFS.
                    check:
                      type: boolean
                      description: |
                        If true check clusters before changing any data. Defaults to: `false`.
                restart:
                  type: object
                  description: |
                    Configuration of restart
                  properties:
                    method:
                      type: string
                      description: |
                        The method used to perform the restart operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
                    onlyPendingRestart:
                      type: boolean
                      description: |
                        By default all Pods are restarted. Setting this option to `true` allow to restart only those Pods which
                         are in pending restart state as detected by the operation. Defaults to: `false`.
                minorVersionUpgrade:
                  type: object
                  description: |
                    Configuration of minor version upgrade
                  properties:
                    postgresVersion:
                      type: string
                      description: |
                        The target postgres version that must have the same major version of the target SGCluster.
                    method:
                      type: string
                      description: |
                        The method used to perform the minor version upgrade operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
                securityUpgrade:
                  type: object
                  description: |
                    Configuration of security upgrade
                  properties:
                    method:
                      type: string
                      description: |
                        The method used to perform the security upgrade operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
              required: ["sgCluster", "op"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  description: |
                    Possible conditions are:

                    * Running: to indicate when the operation is actually running
                    * Completed: to indicate when the operation has completed successfully
                    * Failed: to indicate when the operation has failed
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human-readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition last transition.
                        type: string
                      status:
                        description: Status of the condition, one of `True`, `False` or `Unknown`.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                opRetries:
                  type: integer
                  description: |
                    The number of retries performed by the operation
                opStarted:
                  type: string
                  description: |
                    The ISO 8601 timestamp of when the operation started running
                benchmark:
                  type: object
                  description: |
                    The results of the benchmark
                  properties:
                    pgbench:
                      type: object
                      description: |
                        The results of the pgbench benchmark
                      properties:
                        scaleFactor:
                          type: number
                          nullable: true
                          description: |
                            The scale factor used to run pgbench (`--scale`).
                        transactionsProcessed:
                          type: integer
                          nullable: true
                          description: |
                            The number of transactions processed.
                        latency:
                          type: object
                          description: |
                            The latency results of the pgbench benchmark
                          properties:
                            average:
                              type: object
                              description: |
                                Average latency of transactions
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The latency average value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    The latency measure unit represented in milliseconds
                            standardDeviation:
                              type: object
                              description: |
                                The latency standard deviation of transactions.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The latency standard deviation value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    The latency measure unit represented in milliseconds
                        transactionsPerSecond:
                          type: object
                          description: |
                            All the transactions per second results of the pgbench benchmark
                          properties:
                            includingConnectionsEstablishing:
                              type: object
                              description: |
                                Number of Transaction Per Second (tps) including connection establishing.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The Transaction Per Second (tps) including connections establishing value
                                unit:
                                  type: string
                                  nullable: false
                                  description: |
                                    Transaction Per Second (tps) measure
                            excludingConnectionsEstablishing:
                              type: object
                              description: |
                                Number of Transaction Per Second (tps) excluding connection establishing.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The Transaction Per Second (tps) excluding connections establishing value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    Transaction Per Second (tps) measure
                majorVersionUpgrade:
                  type: object
                  description: |
                    The results of a major version upgrade
                  properties:
                    sourcePostgresVersion:
                      type: string
                      description: |
                        The postgres version currently used by the primary instance
                    targetPostgresVersion:
                      type: string
                      description: |
                        The postgres version that the cluster will be upgraded to
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                restart:
                  type: object
                  description: |
                    The results of a restart
                  properties:
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                minorVersionUpgrade:
                  type: object
                  description: |
                    The results of a minor version upgrade
                  properties:
                    sourcePostgresVersion:
                      type: string
                      description: |
                        The postgres version currently used by the primary instance
                    targetPostgresVersion:
                      type: string
                      description: |
                        The postgres version that the cluster will be upgraded (or downgraded) to
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                securityUpgrade:
                  type: object
                  description: |
                    The results of a security upgrade
                  properties:
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgdistributedlogs.stackgres.io
  # annotations:
  #   "helm.sh/hook": crd-install
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGDistributedLogs
    listKind: SGDistributedLogsList
    plural: sgdistributedlogs
    singular: sgdistributedlogs
    shortNames:
      - sgdil
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: volume-size
        type: string
        jsonPath: .spec.persistentVolume.size
      subresources:
        status: { }
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 52
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the Distributed Logs cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    A Distributed Logs cluster may store logs for zero or more SGClusters.

                    The name must be unique across all Distributed Logs and StackGres clusters in the same namespace. The full cluster name includes the namespace in which the cluster is created.
            spec:
              type: object
              properties:
                persistentVolume:
                  type: object
                  description: Pod's persistent volume configuration
                  properties:
                    size:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                      description: |
                        Size of the PersistentVolume set for the pod of the cluster for distributed logs. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                    storageClass:
                      type: string
                      description: |
                        Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                postgresServices:
                  type: object
                  nullable: true
                  description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                  properties:
                    primary:
                      type: object
                      description: Configuration for the `-primary` service. It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.
                      properties:
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`, `NodePort`)
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                    replicas:
                      type: object
                      description: Configuration for the `-replicas` service. It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.
                      properties:
                        enabled:
                          type: boolean
                          description: Specify if the `-replicas` service should be created or not.
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`, `NodePort`).
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.                
                scheduling:
                  type: object
                  description: Pod custom scheduling configuration.
                  properties:
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      description: Pod custom node selector.
                    tolerations:
                      type: array
                      description: Pod custom node tolerations
                      items:
                        type: object
                        description: Pod custom node toleration
                        properties:
                          key:
                            type: string
                            description: |
                              Key is the taint key that the toleration applies to. Empty means match all taint
                              keys. If the key is empty, operator must be Exists; this combination means to
                              match all values and all keys.
                          operator:
                            type: string
                            description: |
                              Operator represents a key's relationship to the value. Valid operators are Exists
                              and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that
                              a pod can tolerate all taints of a particular category.
                          value:
                            type: string
                            description: |
                              Value is the taint value the toleration matches to. If the operator is Exists, the
                              value should be empty, otherwise just a regular string.
                          effect:
                            type: string
                            description: |
                              Effect indicates the taint effect to match. Empty means match all taint effects.
                              When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          tolerationSeconds:
                            type: integer
                            description: |
                              TolerationSeconds represents the period of time the toleration (which must be of
                              effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                              it is not set, which means tolerate the taint forever (do not evict). Zero and
                              negative values will be treated as 0 (evict immediately) by the system.
                metadata:
                  type: object
                  description: Metadata information from cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created or managed by StackGres.
                          additionalProperties:
                            type: string
                        pods:
                          type: object
                          description: Annotations to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to services created or managed by StackGres.
                          additionalProperties:
                            type: string
                toInstallPostgresExtensions:
                  type: array
                  description: The list of Postgres extensions to install.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required: ["name", "publisher", "version", "repository", "postgresVersion"]
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: |
                        It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                        The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres or Distributed Logs pod on a given Kubernetes node. If set to `true` it will allow more than one StackGres pod per node.
              required: ["persistentVolume"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                podStatuses:
                  type: array
                  description: The list of pod statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the pod.
                      pendingRestart:
                        type: boolean
                        description: Indicate if the pod requires restart
                      installedPostgresExtensions:
                        type: array
                        description: The list of extensions currently installed.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the installed extension.
                            publisher:
                              type: string
                              description: The id of the publisher of the installed extension.
                            version:
                              type: string
                              description: The version of the installed extension.
                            repository:
                              type: string
                              description: The repository base URL from where the extension was installed.
                            postgresVersion:
                              type: string
                              description: The postgres major version of the installed extension.
                            build:
                              type: string
                              description: The build version of the installed extension.
                          required: ["name", "publisher", "version", "repository", "postgresVersion"]
                    required: ["name"]
                databases:
                  type: array
                  description: The list of database status
                  items:
                    type: object
                    description: A database status
                    properties:
                      name:
                        type: string
                        description: The database name that has been created
                      retention:
                        type: string
                        description: The retention window that has been applied to tables
                connectedClusters:
                  type: array
                  description: The list of connected `sgclusters`
                  items:
                    type: object
                    description: A connected `sgcluster`
                    properties:
                      namespace:
                        type: string
                        description: The `sgcluster` namespace
                      name:
                        type: string
                        description: The `sgcluster` name
                      config:
                        type: object
                        description: The configuration for `sgdistributedlgos` of this `sgcluster`
                        properties:
                          sgDistributedLogs:
                            type: string
                            description: The `sgdistributedlogs` to which this `sgcluster` is connected to
                          retention:
                            type: string
                            description: The retention window that has been applied to tables
                fluentdConfigHash:
                  type: string
                  description: The hash of the configuration file that is used by fluentd
                arch:
                  type: string
                  description: The architecture on which the cluster has been initialized.
                os:
                  type: string
                  description: The operative system on which the cluster has been initialized.
                labelPrefix:
                  type: string
                  description: The custom prefix that is prepended to all labels.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sginstanceprofiles.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGInstanceProfile
    listKind: SGInstanceProfileList
    plural: sginstanceprofiles
    singular: sginstanceprofile
    shortNames:
      - sginp
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cpu
        type: string
        jsonPath: .spec.cpu
      - name: memory
        type: string
        jsonPath: .spec.memory
      schema:
        openAPIV3Schema:
          required: ["metadata", "spec"]
          type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Instance Profile. An instance profile represents a ""kind"" of server (CPU and RAM) where you may run StackGres, classified by a given name. The profile may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all instance profiles in the same namespace."
            spec:
              type: object
              properties:
                cpu:
                  type: string
                  pattern: '^[1-9][0-9]*[m]?$'
                  description: |
                    CPU(s) (cores) used for every instance of a SGCluster. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some CPU is needed for the sidecars.

                    The number of cores set is split between all the containers.

                    A minimum of 2 cores is recommended.
                memory:
                  type: string
                  pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                  description: |
                    RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi` specifies Mebibytes or Gibibytes, respectively. Please note that every StackGres pod contains not only the Patroni+Postgres container, but several other sidecar containers. While the majority of the resources are devoted to the main Postgres container, some RAM is needed for the sidecars.

                    The amount of RAM set is split between all the containers.

                    A minimum of 2-4Gi is recommended.
                hugePages:
                  type: object
                  description: |
                    RAM allocated for huge pages
                  properties:
                    hugepages-2Mi:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                      description: |
                        RAM allocated for huge pages with a size of 2Mi. The suffix `Mi` or `Gi` specifies Mebibytes or Gibibytes, respectively.

                        The amount of RAM set is split between all the containers.
                    hugepages-1Gi:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                      description: |
                        RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi` specifies Mebibytes or Gibibytes, respectively.

                        The amount of RAM set is split between all the containers.
              required: ["cpu", "memory"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgobjectstorages.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGObjectStorage
    listKind: SGObjectStorageList
    plural: sgobjectstorages
    singular: sgobjectstorage
    shortNames:
      - sgobjs
  versions:
    - name: v1beta1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: type
        type: string
        jsonPath: .spec.type
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Object Storage configuration.
                    The name must be unique across all object storage configurations in the same namespace.
            spec:
              type: object
              description: |
                Object Storage configuration
              properties:
                type:
                  type: string
                  enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                  description: |
                    Determine the type of object storage used for storing the base backups and WAL segments.
                          Possible values:
                          *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                          *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                          *  `gcs`: Google Cloud Storage.
                          *  `azureBlob`: Microsoft Azure Blob Storage.
                s3:
                  type: object
                  description: |
                    Amazon Web Services S3 configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        AWS S3 bucket name.
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: |
                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                s3Compatible:
                  type: object
                  description: "AWS S3-Compatible API configuration"
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        Bucket name.
                    path:
                      type: string
                      pattern: '^(/[^/]*)*$'
                      description: |
                        Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    enablePathStyleAddressing:
                      type: boolean
                      description: |
                        Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).
                        
                        Defaults to false.
                    endpoint:
                      type: string
                      description: |
                        Overrides the default url to connect to an S3-compatible service.
                        For example: `http://s3-like-service:9000`.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                gcs:
                  type: object
                  description: |
                    Google Cloud Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                      description: |
                        GCS bucket name.
                    path:
                      type: string
                      pattern: "^(/[^/]*)*$"
                      description: |
                        Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    gcpCredentials:
                      type: object
                      description: |
                        The credentials to access GCS for writing and reading.
                      properties:
                        fetchCredentialsFromMetadataService:
                          type: boolean
                          description: |
                            If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.
                            
                            This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                        secretKeySelectors:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                          properties:
                            serviceAccountJSON:
                              type: object
                              description: |
                                A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                          required: [ "serviceAccountJSON" ]
                  required: [ "bucket", "gcpCredentials" ]
                azureBlob:
                  type: object
                  description: |
                    Azure Blob Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                      description: |
                        Azure Blob Storage bucket name.
                    path:
                      type: string
                      pattern: "^(/[^/]*)*$"
                      description: |
                        Optional path within the Azure Blob bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                    azureCredentials:
                      type: object
                      description: |
                        The credentials to access Azure Blob Storage for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            storageAccount:
                              type: object
                              description: |
                                The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                            accessKey:
                              type: object
                              description: |
                                The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                          required: [ "storageAccount", "accessKey" ]
                  required: [ "bucket", "azureCredentials" ]
              required: [ "type" ]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgpoolconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGPoolingConfig
    listKind: SGPoolingConfigList
    plural: sgpoolconfigs
    singular: sgpoolconfig
    shortNames:
      - sgpoc
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Connection Pooling Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all Connection Pooling configurations in the same namespace.
            spec:
              type: object
              properties:
                pgBouncer:
                  type: object
                  description: |
                    Connection pooling configuration based on PgBouncer.
                  properties:
                    pgbouncer.ini:
                      type: object
                      description: |
                        The `pgbouncer.ini` parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                        Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#generic-settings) for more information about supported parameters.
                      properties:
                        pgbouncer:
                          type: object
                          additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [pgbouncer]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#generic-settings) for more information about supported parameters
                        databases:
                          type: object
                          additionalProperties:
                            type: object
                            additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [databases]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#section-databases) for more information about supported parameters.
                        users:
                          type: object
                          additionalProperties:
                            type: object
                            additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [users]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#section-users) for more information about supported parameters.
            status:
              type: object
              properties:
                pgBouncer:
                  type: object
                  description: |
                    Connection pooling configuration status based on PgBouncer.
                  properties:
                    defaultParameters:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        The `pgbouncer.ini` default parameters parameters which are used if not set.
                  required: ["defaultParameters"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgpgconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGPostgresConfig
    listKind: SGPostgresConfigList
    plural: sgpgconfigs
    singular: sgpgconfig
    shortNames:
      - sgpgc
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: version
        type: string
        jsonPath: .spec.postgresVersion
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Postgres Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all Postgres configurations in the same namespace.
            spec:
              type: object
              properties:
                postgresVersion:
                  type: string
                  description: |
                    The **major** Postgres version the configuration is for. Postgres major versions contain one number starting with version 10 (`10`, `11`, `12`, etc), and two numbers separated by a dot for previous versions (`9.6`, `9.5`, etc).

                    Note that Postgres maintains full compatibility across minor versions, and hence a configuration for a given major version will work for any minor version of that same major version.

                    Check [StackGres component versions](https://stackgres.io/doc/latest/intro/versions) to see the Postgres versions supported by this version of StackGres.
                postgresql.conf:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The `postgresql.conf` parameters the configuration contains, represented as an object where the keys are valid names for the `postgresql.conf` configuration file parameters of the given `postgresVersion`. You may check [postgresqlco.nf](https://postgresqlco.nf) as a reference on how to tune and find the valid parameters for a given major version.
              required: ["postgresVersion", "postgresql.conf"]
            status:
              type: object
              properties:
                defaultParameters:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The `postgresql.conf` default parameters which are used if not set.
              required: ["defaultParameters"]
---
# Source: stackgres-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator
  namespace: stackgres
---
# Source: stackgres-operator/templates/webapi-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: stackgres-operator/templates/webapi-authentication-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: user
type: Opaque
data:
  k8sUsername: "YWRtaW4="
  password: NTBkNDE4MDA3MGRkNDcxZjBiNzcxMGNlY2FjNmUxMjFkMDgzMTVlMDZiYjdmZTNiMDJlNGNiNTVkY2IxOWM1Mw==
  clearPassword: cEdSRnV2WWpTZ0NualRwN1p1TnAwS3kybWRiRHJWODJuRnoxdkxmRA==
---
# Source: stackgres-operator/templates/grafana-dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-operator-grafana-dashboard
  namespace: stackgres
data:
  grafana-dashboard.json: |
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "panel",
          "id": "gauge",
          "name": "Gauge",
          "version": ""
        },
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "8.1.2"
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph (old)",
          "version": ""
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "stat",
          "name": "Stat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "table-old",
          "name": "Table (old)",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "description": "This dashboard works with StackGres",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "links": [],
      "panels": [
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 30,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 1,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "connected",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=\"active\"} !=0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 4,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=~\"idle|idle in transaction|idle in transaction (aborted)\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Idle sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 8,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null as zero",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Updated data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 5,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Fetched data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 60,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_xact_commit{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_database_xact_rollback{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 3,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_locks_count{datname=~\"$datname\", instance=~\"${instance}:9187\"} != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, Type:{{mode}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Lock tables",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 14,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "total",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_returned{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Returned data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 6,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_inserted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Inserted data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 7,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_deleted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Deleted data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 62,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"} / (pg_stat_database_blks_read{instance=~\"${instance}:9187\", datname=~\"$datname\"} + pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"})",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{ datname }}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Cache Hit Rate",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "percentunit",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 64,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": true,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_backend",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_alloc{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_alloc",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend_fsync{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "backend_fsync",
                  "refId": "C"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_checkpoint{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_checkpoint",
                  "refId": "D"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_clean{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_clean",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Buffers (bgwriter)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 66,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_conflicts{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} conflicts",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_database_deadlocks{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} deadlocks",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Conflicts/Deadlocks",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "description": "Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 13,
                "x": 0,
                "y": 29
              },
              "hiddenSeries": false,
              "id": 68,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_temp_bytes{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Temp File (Bytes)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 11,
                "x": 13,
                "y": 29
              },
              "hiddenSeries": false,
              "id": 243,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "exemplar": true,
                  "expr": "pg_vaccuum_wraparound_percent{datname=~\"$datname\", instance=~\"${instance}:9187\"} != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, Table:{{full_table_name}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [
                {
                  "colorMode": "warning",
                  "fill": true,
                  "line": true,
                  "op": "gt",
                  "value": 90,
                  "yaxis": "left"
                }
              ],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables near to vacuum wraparound",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 13,
                "x": 0,
                "y": 36
              },
              "hiddenSeries": false,
              "id": 70,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_write_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "write_time - Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk.",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_sync_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "sync_time - Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk.",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Checkpoint Duration Stats",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "ms",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 11,
                "x": 13,
                "y": 36
              },
              "hiddenSeries": false,
              "id": 238,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": true,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null as zero",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "label_replace(sum(rate(pg_stat_bgwriter_checkpoints_timed{instance=~\"${instance}:9187\"}[5m])) by (instance), \"distinct\", \"Timed\", \"timed\", \".*\")*300 or label_replace(sum(rate(pg_stat_bgwriter_checkpoints_req{instance=~\"${instance}:9187\"}[5m])) by (instance), \"distinct\", \"Requested\", \"requested\", \".*\")*300",
                  "interval": "",
                  "legendFormat": "{{distinct}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Checkpoint frequency",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "id": 211,
          "panels": [
            {
              "aliasColors": {
                "Database: mminventory, User: mminventory_pro": "light-blue"
              },
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 213,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [
                {
                  "colorMode": "warning",
                  "fill": true,
                  "fillColor": "rgba(51, 162, 229, 0.2)",
                  "line": true,
                  "lineColor": "rgba(31, 96, 196, 0.6)",
                  "op": "gt",
                  "value": 185,
                  "yaxis": "left"
                },
                {
                  "colorMode": "critical",
                  "fill": true,
                  "line": true,
                  "op": "gt",
                  "value": 250,
                  "yaxis": "left"
                }
              ],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 214,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_waiting{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Waiting Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 215,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Active",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 216,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_idle{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Idle",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 217,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_xact_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}  - XACT",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - QUERY",
                  "refId": "B"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_wait_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - WAIT",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Time",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 218,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_recv{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - RECV",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}  - SENT",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average traffic",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Connection Pooling",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 190,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 3
              },
              "hiddenSeries": false,
              "id": 192,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_commit{pod=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_rollback{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 3
              },
              "hiddenSeries": false,
              "id": 184,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_update{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UPDATE",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_insert{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INSERT",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_delete{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DELETE",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_select{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "SELECT",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_other{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "OTHER",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "SQL statements ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Transactions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 160,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 4
              },
              "hiddenSeries": false,
              "id": 164,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_backend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "BACKEND",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_frontend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "FRONTEND",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 146,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_fatal{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "FATAL",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_error{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "ERROR",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_unknown{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_panic{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "PANIC",
                  "refId": "D"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "ERROR messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 170,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_notice{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "NOTICE",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_warning{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "WARNING",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_info{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INFO",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_log{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "LOG",
                  "refId": "E"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_debug{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DEBUG",
                  "refId": "F"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "NOTICE ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Messages",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 152,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 5
              },
              "hiddenSeries": false,
              "id": 154,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} ",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Successful logins",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 5
              },
              "hiddenSeries": false,
              "id": 156,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_encrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - ENCRYPTED",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_unencrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - UNENCRYPTED",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Sessions Encryption",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Sessions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 34,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 0,
                "y": 6
              },
              "id": 36,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "value",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "name"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_static{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "instant": true,
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "{{short_version}}",
                  "refId": "A"
                }
              ],
              "title": "Version",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "description": "start time of the process",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "dateTimeFromNow"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 4,
                "y": 6
              },
              "id": 28,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "process_start_time_seconds{instance=~\"${instance}:9187\"} * 1000",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Start Time",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 8,
                "y": 6
              },
              "id": 10,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current fetch data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 12,
                "y": 6
              },
              "id": 11,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_inserted{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "",
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current insert data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 16,
                "y": 6
              },
              "id": 12,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current update data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 20,
                "y": 6
              },
              "id": 38,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_settings_max_connections{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Max Connections",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Average user and system CPU time spent in seconds.",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 22,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_cpu_seconds_total{instance=~\"${instance}:9187\"}[5m]) * 1000)",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "CPU Time",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average CPU Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Virtual and Resident memory size in bytes, averages over 5 min interval",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 24,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_resident_memory_bytes{instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Resident Mem",
                  "refId": "A"
                },
                {
                  "expr": "avg(rate(process_virtual_memory_bytes{instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Virtual Mem",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Memory Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "decbytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Number of open file descriptors",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 26,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "process_open_fds{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Open FD",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Open File Descriptors",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 228,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "format": "time_series",
                  "instant": false,
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Total",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "percent",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ],
              "yaxis": {
                "align": true,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 230,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes free",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk inodes",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "General Counters, Disks, CPU, Memory and File Descriptor Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 32,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "0": {
                          "index": 0,
                          "text": "Leader"
                        },
                        "1": {
                          "index": 1,
                          "text": "Replica"
                        }
                      },
                      "text": "Leader",
                      "type": 1,
                      "value": "0"
                    },
                    {
                      "from": "",
                      "id": null,
                      "operator": "",
                      "text": "Replica",
                      "to": "",
                      "type": 1,
                      "value": "1"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "string"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 7
              },
              "id": 42,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "exemplar": true,
                  "expr": "pg_replication_is_replica{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Role",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 6,
                "y": 7
              },
              "id": 44,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_maintenance_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Maintenance Work Mem",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 9,
                "y": 7
              },
              "id": 46,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Work Mem",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "decimals": 1,
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 12,
                "y": 7
              },
              "id": 48,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_wal_size_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max WAL Size",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 15,
                "y": 7
              },
              "id": 50,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_random_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Random Page Cost",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 2,
                "x": 18,
                "y": 7
              },
              "id": 52,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_seq_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Seq Page Cost",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 4,
                "x": 20,
                "y": 7
              },
              "id": 56,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_parallel_workers{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max Parallel Workers",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 10
              },
              "id": 40,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_shared_buffers_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Shared Buffers",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 10
              },
              "id": 54,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_worker_processes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max Worker Processes",
              "type": "stat"
            }
          ],
          "title": "Settings",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 92,
          "panels": [
            {
              "aliasColors": {},
              "bars": true,
              "cacheTimeout": null,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 17,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 96,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": false,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_database_size{instance=~\"${instance}:9187\", datname!~\"template0|template1\"}",
                  "instant": false,
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "{{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Database Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "series",
                "name": null,
                "show": true,
                "values": [
                  "current"
                ]
              },
              "yaxes": [
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 8
              },
              "id": 234,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "bytes"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Size",
              "transform": "timeseries_aggregations",
              "type": "table-old"
            },
            {
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "displayName": "",
                  "mappings": [],
                  "max": 100,
                  "min": 0,
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "orange",
                        "value": 75
                      },
                      {
                        "color": "red",
                        "value": 90
                      }
                    ]
                  },
                  "unit": "percent"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 8,
                "w": 3,
                "x": 21,
                "y": 8
              },
              "id": 232,
              "options": {
                "orientation": "auto",
                "reduceOptions": {
                  "calcs": [
                    "last"
                  ],
                  "fields": "",
                  "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true,
                "text": {}
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "(1.0 - node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "Size",
                  "refId": "A"
                },
                {
                  "expr": "(1.0 - node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "inodes",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Usage",
              "type": "gauge"
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 12
              },
              "id": 235,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "short"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "C"
                },
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Free",
                  "refId": "D"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk inodes",
              "transform": "timeseries_aggregations",
              "type": "table-old"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 11,
                "w": 24,
                "x": 0,
                "y": 16
              },
              "hiddenSeries": false,
              "id": 195,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "sort_desc(topk(10, pg_total_relation_size_bytes{instance=~\"${instance}:9187\"}))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Top 10 bigger tables",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Size",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 116,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 122,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_idx_scan{instance=~\"${instance}:9187\"}[5m])) + sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_seq_scan{instance=~\"${instance}:9187\"}[5m])))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "More Consulted Tables (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 124,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_ins{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table with more inserts (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 128,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_upd{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more UPDATE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 126,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_del{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more DELETE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Usage Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 130,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 205,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index bloat Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 207,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_real_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 209,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, pg_index_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Bloat Ratio (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Index Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 104,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 11
              },
              "hiddenSeries": false,
              "id": 106,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_dead_tup{instance=~\"${instance}:9187\"}[5m])*300)",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Dead tuples (top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 11
              },
              "hiddenSeries": false,
              "id": 199,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema:{{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Ratio (top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 19
              },
              "hiddenSeries": false,
              "id": 201,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Size",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 19
              },
              "hiddenSeries": false,
              "id": 203,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_extra_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table pages Extra size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Table Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 11
          },
          "id": 88,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 12
              },
              "id": 102,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "background",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state=\"streaming\"} and on (instance)(pg_replication_is_replica == 0))",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replica Nodes",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 12
              },
              "id": 198,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "background",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==1)",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replication Slots",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 12
              },
              "id": 98,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_wal_position_bytes{instance=~\"${instance}:9187\"}",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Current LSN",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 14,
                "w": 12,
                "x": 12,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 196,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true,
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_status_lag_size{cluster_name=\"$cluster_name\"} and on (instance)(pg_replication_is_replica == 0)",
                  "interval": "",
                  "legendFormat": "Replica: {{application_name}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag size",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "color": "rgba(237, 129, 40, 0.89)",
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "#299c46",
                        "value": null
                      },
                      {
                        "color": "rgba(237, 129, 40, 0.89)",
                        "value": 0
                      },
                      {
                        "color": "#C4162A",
                        "value": 1
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 15
              },
              "id": 197,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state!=\"streaming\"} and on (instance)(pg_replication_is_replica == 0))",
                  "format": "time_series",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Replica with no streaming status",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "color": "rgba(237, 129, 40, 0.89)",
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "#299c46",
                        "value": null
                      },
                      {
                        "color": "rgba(237, 129, 40, 0.89)",
                        "value": 0
                      },
                      {
                        "color": "#C4162A",
                        "value": 1
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 15
              },
              "id": 100,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==0)",
                  "format": "time_series",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Inactive Replication Slots",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 90,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true,
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_lag{cluster_name=\"$cluster_name\"} and on (instance)(pg_replication_is_replica == 1)",
                  "interval": "",
                  "legendFormat": "Replication lag in pod {{pod}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag (seconds)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Replication",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 12
          },
          "id": 80,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 11,
                "x": 0,
                "y": 13
              },
              "hiddenSeries": false,
              "id": 82,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_archiver_archived_count{instance=~\"${instance}:9187\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "# of WALs archived",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "No. WALs files archived",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 10,
                "x": 11,
                "y": 13
              },
              "hiddenSeries": false,
              "id": 242,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_archiver_failed_count{instance=~\"${instance}:9187\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "# Archive attemps",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of failed attempts for archiving WAL files",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "gridPos": {
                "h": 8,
                "w": 3,
                "x": 21,
                "y": 13
              },
              "id": 241,
              "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "value"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_stat_archiver_last_archive_age{instance=~\"${instance}:9187\"}",
                  "instant": false,
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Last archive age (Seconds)",
              "type": "stat"
            }
          ],
          "title": "Archiving",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 72,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 14
              },
              "hiddenSeries": false,
              "id": 74,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_slow_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Slow Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 16,
                "x": 8,
                "y": 14
              },
              "hiddenSeries": false,
              "id": 86,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20,rate(pg_stat_user_tables_seq_tup_read{instance=~\"${instance}:9187\"}[5m]))>0",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Sequential Scans",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 236,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_age_in_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Long running transaction age(sec)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 76,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_blocked_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Table: {{table}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Blocked Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 16,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 84,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_transactions{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of long running transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 30
              },
              "hiddenSeries": false,
              "id": 78,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_oldest_blocked_age_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries largest  time lock",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 30
              },
              "hiddenSeries": false,
              "id": 114,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stuck_idle_in_transaction_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries that are stuck being idle in transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Queries",
          "type": "row"
        }
      ],
      "refresh": false,
      "schemaVersion": 25,
      "style": "dark",
      "tags": [
        "postgres",
        "db",
        "stats"
      ],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(up{namespace=\"$namespace\"})",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Pod",
            "multi": false,
            "name": "pod",
            "options": [],
            "query": "query_result(up{namespace=\"$namespace\"})",
            "refresh": 2,
            "regex": "/.*pod=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(up{namespace=\"$namespace\", pod=\"$pod\"})",
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "Instance",
            "multi": false,
            "name": "instance",
            "options": [],
            "query": "query_result(up{namespace=\"$namespace\", pod=\"$pod\"})",
            "refresh": 1,
            "regex": "/.*instance=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(datname)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Database",
            "multi": true,
            "name": "datname",
            "options": [],
            "query": "label_values(datname)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(pg_up{pod=\"$pod\"})",
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "Cluster Name",
            "multi": false,
            "name": "cluster_name",
            "options": [],
            "query": "query_result(pg_up{pod=\"$pod\"})",
            "refresh": 1,
            "regex": "/.*cluster_name=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "datasource": null,
            "description": null,
            "error": null,
            "filters": [],
            "hide": 0,
            "label": "",
            "name": "Filters",
            "skipUrlSync": false,
            "type": "adhoc"
          }
        ]
      },
      "time": {
        "from": "now-12h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "utc",
      "title": "StackGres Dashboard",
      "uid": "000000041",
      "version": 6
    }
    
---
# Source: stackgres-operator/templates/webapi-nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-restapi-nginx
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    pid        /tmp/nginx.pid;
    events{
    }
    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        client_max_body_size  20M;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;

        keepalive_timeout  65;

        include /etc/nginx/conf.d/*.conf;
    }
  stackgres-operator.template: |
    server {
      set $grafana_embedded '${GRAFANA_EMBEDDED}';

      server_name  localhost;

      listen       9080;
      listen       9443 ssl;
      ssl_certificate         /etc/operator/certs/server.crt;
      ssl_certificate_key     /etc/operator/certs/root.key;
      root   /opt/app-root/src;
      index index.html;

      location /admin/ {
        try_files $uri $uri/index.html /admin/index.html;
      }

      location ~ ^(/|/admin|/admin/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location /grafana {
        if ($grafana_embedded != true) {
          return 404;
        }
        add_header Content-Type text/plain;
        return 200 "$scheme://$http_host${GRAFANA_URL_PATH}";
      }

      location ~ ^(/|/stackgres|/stackgres/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location ~ ^/stackgres {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_pass http://localhost:8080;
      }

      location / {
        if ($grafana_embedded != true) {
          return 404;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        index index.html index.htm;
        proxy_set_header Authorization "Bearer ${GRAFANA_TOKEN}";
        proxy_hide_header X-Frame-Options;
        proxy_pass "${GRAFANA_SCHEMA}://${GRAFANA_WEB_HOST}";
      }
    }
---
# Source: stackgres-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - pods
  - pods/exec
  - pods/log
  - services
  - endpoints
  - endpoints/restricted
  - persistentvolumeclaims
  - configmaps
  - secrets
  - statefulsets
  - serviceaccounts
  - namespaces
  - roles
  - rolebindings
  - events
  - cronjobs
  - persistentvolumeclaims
  - jobs
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - delete
  - patch
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters
  - sgpgconfigs
  - sginstanceprofiles
  - sgpoolconfigs
  - sgbackupconfigs
  - sgbackups
  - sgdistributedlogs
  - sgdbops
  - sgobjectstorages
  verbs:
  - create
  - watch
  - list
  - get
  - update
  - patch
  - delete
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters/status
  - sgdistributedlogs/status
  verbs:
  - update
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  verbs:
  - list
  - get
  - create
  - delete
  - update
  - patch
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - prometheus
  - prometheuses
  - podmonitors
  verbs:
  - list
  - get
---
# Source: stackgres-operator/templates/webapi-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccount
  verbs:
  - impersonate
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets # Secret Verification authentication
  verbs:
  - get
  - list
---
# Source: stackgres-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator
  namespace: stackgres
subjects:
- kind: ServiceAccount
  name: stackgres-operator
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/webapi-authorization-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi-admin
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: rolebinding
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: User
  name: admin
---
# Source: stackgres-operator/templates/webapi-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: stackgres-restapi
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-restapi
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/operator-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-operator
spec:
  type: ClusterIP
  selector:
    app: stackgres-operator
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https
---
# Source: stackgres-operator/templates/webapi-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  type: 'ClusterIP'
  selector:
    app: stackgres-restapi
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https
---
# Source: stackgres-operator/templates/operator-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: stackgres-operator
    version: "1.2.0"
    group:  stackgres.io
  name: stackgres-operator
  namespace: stackgres
spec:
  replicas: 0
  selector:
    matchLabels:
      app: stackgres-operator
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-operator
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-operator
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: stackgres-operator
        image: "stackgres/operator:1.2.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 185
          runAsGroup: 185
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: OPERATOR_IMAGE_VERSION
            value: "1.2.0"
          - name: PROMETHEUS_AUTOBIND
            value: "true"
          - name: OPERATOR_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
          - name: SG_CONTAINER_REGISTRY
            value: "docker.io"
          - name: SG_IMAGE_PULL_POLICY
            value: "IfNotPresent"
          - name: EXTENSIONS_REPOSITORY_URLS
            value: "https://extensions.stackgres.io/postgres/repository"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        - containerPort: 8443
          name: "https"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/q/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/q/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 2
        volumeMounts:
          - name: operator-certs
            mountPath: /etc/operator/certs
            readOnly: true
      volumes:
        - name: operator-certs
          secret:
            secretName: stackgres-operator-certs
            optional: false
            items:
              - key: root.key
                path: root.key
              - key: server.crt
                path: server.crt
---
# Source: stackgres-operator/templates/webapi-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    app: stackgres-restapi
    version: "1.2.0"
    group:  stackgres.io
  name: stackgres-restapi
  namespace: stackgres
spec:
  replicas: 0
  selector:
    matchLabels:
      app: stackgres-restapi
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-restapi
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-restapi
      securityContext:
        runAsNonRoot: true
      containers:
      - name: stackgres-restapi
        image: "stackgres/restapi:1.2.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 185
          runAsGroup: 185
        env:
          - name: RESTAPI_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: RESTAPI_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
          - name: EXTENSIONS_REPOSITORY_URLS
            value: "https://extensions.stackgres.io/postgres/repository"
        ports:
        - containerPort: 8080
          name: "resthttp"
          protocol: "TCP"
        - containerPort: 8443
          name: "resthttps"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/q/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/q/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 2          
        volumeMounts:
          - name: web-certs
            mountPath: /etc/operator/certs
            readOnly: true
      - name: stackgres-adminui
        image: 'stackgres/admin-ui:1.2.0'
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 998
          runAsGroup: 998
        env:
          - name: GRAFANA_URL_PATH
            value: "/"
          - name: GRAFANA_SCHEMA
            value: "http"
          - name: GRAFANA_WEB_HOST
            value: "localhost:8080"
          - name: GRAFANA_TOKEN
            value: "unknown"
        args:
          - '/bin/sh'
          - '-ec'
          - |
            envsubst '
              $GRAFANA_EMBEDDED
              $GRAFANA_URL_PATH
              $GRAFANA_SCHEMA
              $GRAFANA_WEB_HOST
              $GRAFANA_TOKEN' \
              < /etc/nginx/template.d/stackgres-operator.template \
              > /etc/nginx/conf.d/stackgres-operator.conf
            exec nginx -g 'daemon off;'
        ports:
        - containerPort: 9443
          name: "https"
          protocol: "TCP"
        - containerPort: 9080
          name: "http"
          protocol: "TCP"             
        volumeMounts:
          - name: web-certs
            mountPath: /etc/operator/certs
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/template.d
            readOnly: true
          - name: operator-nginx-etc
            subPath: etc/nginx/conf.d
            mountPath: /etc/nginx/conf.d
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/cache/nginx
            mountPath: /var/cache/nginx
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/run
            mountPath: /var/run
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/log/nginx
            mountPath: /var/log/nginx
            readOnly: false
      volumes:
        - name: web-certs
          secret:
            secretName: stackgres-operator-web-certs
            optional: false
            items:
              - key: root.key
                path: root.key
              - key: server.crt
                path: server.crt
              - key: jwt-rsa.key
                path: jwt-rsa.key
              - key: jwt-rsa.pub
                path: jwt-rsa.pub
        - name: operator-nginx
          configMap:
            name: stackgres-restapi-nginx
            optional: false
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: stackgres-operator.template
                path: stackgres-operator.template
        - name: operator-nginx-etc
          emptyDir: {}
---
# Source: stackgres-operator/templates/cr-updater-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-cr-updater
  namespace: stackgres
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: stackgres-operator/templates/crd-upgrade-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-crd-upgrade
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: stackgres-operator/templates/crd-webhooks-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-crd-webhooks
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"
---
# Source: stackgres-operator/templates/cr-updater-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator-cr-updater
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - secrets
  verbs:
  - get
- apiGroups: ["apiextensions.k8s.io", "customresourcedefinitions.apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - patch
  - update
  - get
  - list
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters
  - sgpgconfigs
  - sginstanceprofiles
  - sgpoolconfigs
  - sgbackupconfigs
  - sgbackups
  - sgdistributedlogs
  - sgdbops
  - sgobjectstorages
  verbs:
  - list
  - get
  - update
  - patch
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters/status
  - sgdistributedlogs/status
  verbs:
  - update
---
# Source: stackgres-operator/templates/crd-upgrade-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator-crd-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - secrets
  verbs:
  - get
- apiGroups: ["apiextensions.k8s.io", "customresourcedefinitions.apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - patch
  - update
  - get
  - list
---
# Source: stackgres-operator/templates/crd-webhooks-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator-crd-webhooks
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - secrets
  verbs:
  - get
- apiGroups: ["apiextensions.k8s.io", "customresourcedefinitions.apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - patch
  - update
  - get
  - list
---
# Source: stackgres-operator/templates/cr-updater-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-cr-updater
  namespace: stackgres
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
subjects:
- kind: ServiceAccount
  name: stackgres-operator-cr-updater
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator-cr-updater
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/crd-upgrade-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-crd-upgrade
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
subjects:
- kind: ServiceAccount
  name: stackgres-operator-crd-upgrade
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator-crd-upgrade
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/crd-webhooks-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-crd-webhooks
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
subjects:
- kind: ServiceAccount
  name: stackgres-operator-crd-webhooks
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator-crd-webhooks
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"
subjects:
- kind: ServiceAccount
  name: stackgres-operator-init
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: 'cluster-admin'
  apiGroup: rbac.authorization.k8s.io
---
# Source: stackgres-operator/templates/cr-updater-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-cr-updater"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: cr-updater
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "2"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: cr-updater
    spec:
      serviceAccountName: stackgres-operator-cr-updater
      containers:
      - name: "stackgres-jobs"
        image: "stackgres/jobs:1.2.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CR_UPDATER
            value: "true"
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/crd-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-crd-upgrade"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: upgrade-crd
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "2"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: upgrade-crd
    spec:
      serviceAccountName: stackgres-operator-crd-upgrade
      containers:
      - name: "stackgres-jobs"
        image: "stackgres/jobs:1.2.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CRD_UPGRADE
            value: "true"
          - name: CONVERSION_WEBHOOKS
            value: "false"
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/crd-webhooks-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-conversion-webhooks"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: configure-crd-webhooks
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "3"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: configure-crd-webhooks
    spec:
      serviceAccountName: stackgres-operator-crd-webhooks
      containers:
      - name: "stackgres-jobs"
        image: "stackgres/jobs:1.2.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CRD_UPGRADE
            value: "false"
          - name: CONVERSION_WEBHOOKS
            value: "true"   
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/create-certificate-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-create-certificate"
  namespace: stackgres
  labels:
    app: "stackgres-operator-create-certificate"
    scope: init
    job: create-certificate
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      labels:
        app: "stackgres-operator-create-certificate"
        scope: init
        job: create-certificate
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-create-certificate"
        image: ongres/kubectl:v1.23.3-build-6.10
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl delete csr --ignore-not-found 'stackgres-operator'
            cat << EOF > /tmp/csr.conf
            [req]
            req_extensions = v3_req
            distinguished_name = req_distinguished_name
            [req_distinguished_name]
            [ v3_req ]
            basicConstraints = CA:FALSE
            keyUsage = nonRepudiation, digitalSignature, keyEncipherment
            extendedKeyUsage = serverAuth
            subjectAltName = @alt_names
            [alt_names]
            DNS.1 = stackgres-operator
            DNS.2 = stackgres-operator.stackgres
            DNS.3 = stackgres-operator.stackgres.svc
            DNS.4 = stackgres-operator.stackgres.svc.cluster.local
            EOF
            
            K8S_VERSION="$(kubectl get node --template '{{ (index .items 0).status.nodeInfo.kubeletVersion }}')"
            K8S_VERSION="${K8S_VERSION#v}"
            
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              openssl req -new -nodes -text -keyout /tmp/root.key \
                  -subj "/CN=system:node:stackgres-operator.stackgres;/O=system:nodes" \
                  -out /tmp/server.csr \
                  -config /tmp/csr.conf
            else
              openssl req -new -nodes -text -keyout /tmp/root.key \
                  -subj "/CN=stackgres-operator.stackgres" \
                  -out /tmp/server.csr \
                  -config /tmp/csr.conf
            fi
            openssl rsa -in /tmp/root.key -pubout -out /tmp/root.pem
            
            cat << EOF | kubectl create -f -
            $(
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              echo "apiVersion: certificates.k8s.io/v1"
            else
              echo "apiVersion: certificates.k8s.io/v1beta1"
            fi
            )
            kind: CertificateSigningRequest
            metadata:
              name: stackgres-operator
            spec:
              request: "$(cat /tmp/server.csr | base64 | tr -d '\n')"
              usages:
              - digital signature
              - key encipherment
              - server auth
            $(
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              echo "  signerName: kubernetes.io/kubelet-serving"
            fi
            )
            EOF
            
            if ! kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
            then
              kubectl certificate approve 'stackgres-operator'
              echo -n "Waiting for CSR approval..."
              until kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
              do
                echo -n .
                sleep 5
              done
              echo "approved"
            fi
            echo -n "Waiting for CSR certificate generation..."
            until kubectl get csr 'stackgres-operator' \
              --template '{{ if .status }}{{ if .status.certificate }}true{{ end }}{{ end }}' \
              | grep -q '^true$'
            do
              echo -n .
              sleep 5
            done
            echo "certificate generated"
            
            KEY="$(cat /tmp/root.key | base64 | tr -d '\n')"
            PUB="$(cat /tmp/root.pem | base64 | tr -d '\n')"
            CRT="$(kubectl get csr 'stackgres-operator' --template '{{ .status.certificate }}')"
            
            if [ -z "$CRT" ]
            then
              echo "Certificate not found in CSR!"
              exit 1
            fi
            cat << EOF > /tmp/validating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1
            kind: ValidatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgcluster'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpgconfig'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpoolconfig'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sginstanceprofile'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackupconfig'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackup'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgdistributedlogs'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgdbops.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdbops"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgdbops'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgobjectstorage.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgobjectstorage"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgobjectstorage'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
            EOF
            cat << EOF > /tmp/mutating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1
            kind: MutatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters", "sgclusters/*"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgcluster'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpgconfig'
                  caBundle: ${CRT} 
                admissionReviewVersions: ["v1beta1"]
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpoolconfig'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sginstanceprofile'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackupconfig'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackup'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs", "sgdistributedlogs/*"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgdistributedlogs'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
              - name: sgdbops.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdbops"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgdbops'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1beta1"]
            
            EOF
            cat << EOF > /tmp/certificate-secret.yaml            
            apiVersion: v1
            kind: Secret
            metadata:
              name: stackgres-operator-certs
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            type: Opaque
            data:
              root.key: ${KEY}
              server.crt: ${CRT}
            
            EOF
            
            kubectl apply -f /tmp/validating-webhook-configuration.yaml
            kubectl apply -f /tmp/mutating-webhook-configuration.yaml
            kubectl apply -f /tmp/certificate-secret.yaml
            cat << EOF > /tmp/csr-web.conf
            [req]
            req_extensions = v3_req
            distinguished_name = req_distinguished_name
            [req_distinguished_name]
            [ v3_req ]
            basicConstraints = CA:FALSE
            keyUsage = nonRepudiation, digitalSignature, keyEncipherment
            extendedKeyUsage = serverAuth
            subjectAltName = @alt_names
            [alt_names]
            DNS.1 = stackgres-restapi
            DNS.2 = stackgres-restapi.stackgres
            DNS.3 = stackgres-restapi.stackgres.svc
            DNS.4 = stackgres-restapi.stackgres.svc.cluster.local
            EOF
            
            openssl req -new -nodes -text -keyout /tmp/web.key \
                -subj "/CN=stackgres-restapi.stackgres" \
                -out /tmp/server-web.csr \
                -config /tmp/csr-web.conf
            openssl rsa -in /tmp/web.key -pubout -out /tmp/web.pem
            openssl x509 -signkey /tmp/web.key -in /tmp/server-web.csr \
              -req -days 365 -out /tmp/server-web.crt
            WEB_KEY="$(cat /tmp/web.key | base64 | tr -d '\n')"
            WEB_PUB="$(cat /tmp/web.pem | base64 | tr -d '\n')"
            WEB_CRT="$(cat /tmp/server-web.crt | base64 | tr -d '\n')"
            cat << EOF > /tmp/web-certificate-secret.yaml            
            apiVersion: v1
            kind: Secret
            metadata:
              name: stackgres-operator-web-certs
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            type: Opaque
            data:
              root.key: ${WEB_KEY}
              server.crt: ${WEB_CRT}
              jwt-rsa.key: ${WEB_KEY}
              jwt-rsa.pub: ${WEB_PUB}
            
            EOF
            
            kubectl apply -f /tmp/web-certificate-secret.yaml
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-bootstrap"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: bootstrap
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: bootstrap
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-bootstrap"
        image: ongres/kubectl:v1.23.3-build-6.10
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            true
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/integrate-grafana-job.yaml

---
# Source: stackgres-operator/templates/upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-upgrade"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: upgrade
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-upgrade"
        image: ongres/kubectl:v1.23.3-build-6.10
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            cat << 'EOF' > /tmp/prometheus-postgres-exporter-init.sql
            CREATE EXTENSION IF NOT EXISTS dblink;
            CREATE EXTENSION IF NOT EXISTS plpython3u;
            
            CREATE OR REPLACE FUNCTION df(path text)
            RETURNS SETOF text
            AS
            $$
              import subprocess
              try:
                result = subprocess.run(['df', '-B1', '--output=source,target,fstype,size,avail,itotal,iavail', path], timeout=1, stdout=subprocess.PIPE, stderr=subprocess.PIPE, encoding='UTF-8')
              except:
                return ['- ' + path + ' - - - - - timeout']
              if result.returncode == 0:
                return result.stdout.split('\n')[1:2]
              else:
                return ['- ' + path + ' - - - - - ' + result.stderr.replace(' ', '\\s')]
            $$
            LANGUAGE plpython3u;
            
            CREATE OR REPLACE FUNCTION mounts()
            RETURNS SETOF text
            AS
            $$
              import subprocess
              return subprocess.run(['cat', '/proc/mounts'], stdout=subprocess.PIPE, encoding='UTF-8').stdout.split('\n')
            $$
            LANGUAGE plpython3u;
            
            EOF
            kubectl get sgcluster -A --template '{{ range .items }}{{ printf "%s:%s\n" .metadata.namespace .metadata.name }}{{ end }}' \
              | while read CLUSTER
                do
                  OPERATOR_VERSION="$(kubectl get sgcluster -n "${CLUSTER%:*}" "${CLUSTER#*:}" \
                    --template '{{ index .metadata.annotations "stackgres.io/operatorVersion" }}')"
                  if echo "$OPERATOR_VERSION" | grep -q '^0\.9\(\.[0123]\)\?\(-.*\)\?$'
                  then
                    kubectl annotate service -n "${CLUSTER%:*}" "${CLUSTER#*:}-primary" \
                      --overwrite stackgres.io/reconciliation-pause-until-restart=true
                    PRIMARY_POD="$(kubectl get pod -n "${CLUSTER%:*}" \
                      -l "app=StackGresCluster,cluster-name=${CLUSTER#*:},cluster=true,role=master" \
                      -o name | head -n 1)"
                    POSTGRES_PASSWORD="$(kubectl get secret -n "${CLUSTER%:*}" "${CLUSTER#*:}" \
                      --template '{{ printf "%s" (index .data "superuser-password" | base64decode) }}')"
                    cat /tmp/prometheus-postgres-exporter-init.sql | \
                      kubectl exec -i -n "${CLUSTER%:*}" "$PRIMARY_POD" -c patroni -- \
                        sh -c "PGPASSWORD='$POSTGRES_PASSWORD' psql -h '${CLUSTER#*:}-primary'"
                  fi
                done
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/wait-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-wait"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: cleanup
    job: wait
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: cleanup
        job: wait
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-wait"
        image: ongres/kubectl:v1.23.3-build-6.10
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl set env -n 'stackgres' 'deployment/stackgres-operator' DISABLE_RECONCILIATION-
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-operator'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-operator'
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-restapi'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-restapi'
      restartPolicy: OnFailure
---
# Source: stackgres-operator/templates/wait-webhooks-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-wait-webhooks"
  namespace: stackgres
  labels:
    app: stackgres-operator
    scope: init
    job: wait-webhooks
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: wait-webhooks
    spec:
      serviceAccountName: stackgres-operator-init
      containers:
      - name: "stackgres-operator-wait-webhooks"
        image: ongres/kubectl:v1.23.3-build-6.10
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl set env -n 'stackgres' 'deployment/stackgres-operator' DISABLE_RECONCILIATION=true
            kubectl scale --timeout 1h --replicas 1 -n 'stackgres' 'deployment/stackgres-operator'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-operator'
      restartPolicy: OnFailure
